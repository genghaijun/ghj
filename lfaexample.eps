%!PS-Adobe-3.0 EPSF-3.0
%%Title: (lfaexample.pdf)
%%Version: 1 5
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 08:07:02 07/24/18
%%For: (genghaijun)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 119 133
%%HiResBoundingBox: 0.0 0.0 119.4 132.6
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3682 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2018-07-24T08:07:02+08:00</xap:CreateDate>
         <xap:ModifyDate>2018-07-24T08:07:02+08:00</xap:ModifyDate>
         <xap:MetadataDate>2018-07-24T08:07:02+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:578FEC7DD58EE81181DCAC22DD74A90D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:578FEC7DD58EE81181DCAC22DD74A90D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>genghaijun</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 119.4 132.6 rectclip
%ADOBeginSubsetFont: XKLAAA+Ribbit's#20CMMI12 Initial
ct_T42Dict begin
-0.027 -0.25 1.023 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /XKLAAA+Ribbit's#20CMMI12
Type42DictBegin
[<00010000000c000c000c000c4f532f326f93437d000000cc000000606376
7420058d00a00000012c0000001c6670676d06599c370000014800000173
676c7966e3e4bf48000009540000103c68656164e66b6afb000002bc0000
00366868656107ce060f000002f400000024686d747818a201b600000318
000001e26c6f636109950e18000004fc0000010c6d617870029201fa0000
0608000000206e616d65426bc97800000628000002ca70726570fffbc3c3
000008f40000006067646972000000000000000000000000000201c001f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
080000020004000000a30000004000000000000000003141534300010021
00aa02bcff38004302ee00fa000000010000000001f402bc000000200003
00140016001d004100000015ff3e000a01af000a01c4000b02ab0015b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800092c4b
535845441b2121592d000001000000011999b2a008bc5f0f3cf5000903e8
00000000c1b4874400000000c1b48744ffe1ff06040202ee000200090002
0000000000000001000002eeff56000003d3ffe1fe92040203e800fa0000
00000000000000000000006c014d000000000000014d0000000000000000
00000000000000000000000000000256001b000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000262000c01ca001a
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000001100057000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003b300310000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000202002801a0002d01a5002801fd002801c6002d0000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001b9001b00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000106010601060106010601060106010601060106010601060106
010601060106010601ae026c026c026c026c026c026c026c026c026c026c
026c026c026c026c026c026c026c026c026c026c026c026c026c026c0294
029402940294029402940294029402940294029402940294029402940294
029402940294039a039a039a039a039a039a039a039a039a039a039a039a
039a039a039a039a039a039a039a039a0470054605d806dc076007600760
0760076007600760076007600760076007600760081e081e081e081e081e
081e081e081e081e081e081e081e081e081e081e081e081e081e081e081e
081e081e081e081e081e081e081e00010000008500860002000000000001
00000000000a000002000173000000000000001000c60001000000000000
004500000001000000000001000f00450001000000000002000d00540001
000000000003000f00610001000000000004000f00700001000000000005
000d007f0001000000000006000f007000010000000000080020008c0003
000104090000008a00ac0003000104090001001e01360003000104090002
001a01540003000104090003001e016e0003000104090004001e018c0003
000104090005001a01aa0003000104090006001e018c0003000104090008
004001c4436f7079726967687420284329203139393720416d6572696361
6e204d617468656d61746963616c20536f63696574792e20416c6c205269
67687473205265736572766564436f6d7075746572204d6f6465726e4d65
6469756d204974616c69635269626269743b434d4d4931323b3152696262
6974277320434d4d49313256657273696f6e20312e313030432920416d65
726963616e204d617468656d61746963616c20536f63696574790043006f
007000790072006900670068007400200028004300290020003100390039
003700200041006d00650072006900630061006e0020004d006100740068
0065006d00610074006900630061006c00200053006f0063006900650074
0079002e00200041006c006c002000520069006700680074007300200052
00650073006500720076006500640043006f006d00700075007400650072
0020004d006f006400650072006e004d0065006400690075006d00200049
00740061006c00690063005200690062006200690074003b0043004d004d
004900310032003b00310052006900620062006900740027007300200043
004d004d00490031003200560065007200730069006f006e00200031002e
0031003000300043002900200041006d00650072006900630061006e0020
004d0061007400680065006d00610074006900630061006c00200053006f
006300690065007400790000b800002b00ba0001000200022b01ba000300
0100022b01bf000300550046003600270018000000082b00bf000100fa00
cd00a00065003d000000082bbf000200be009c00790065003d000000082b
00ba0004000500072bb8000020457d69184400>
[4157 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 0 <> XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 524 25 <0001000cfff6025201b90052006eba003e002c00032bba0000002200032b
bb00180003001300042bb8001310b8000ad000b800004558b800132f1bb9
001300083e59b800004558b8001f2f1bb9001f00043e59b800004558b800
272f1bb9002700043e59b8001f10b80005dcba0022001f0013111239b800
44d03031251e0333323e02353426272e0135343633321e0215140e042322
26270e0323222e0235343e02373e013332151406070e03151416171e0133
3236373e01373e013332161514060120021116180a2946331d131003081d
11060e0c080c192637462c2a2d040c1e242b1926291303030f1d1a0a1607
0a02061a221307060d10280b2c4317020408050f0f050c14901f2312042f
4650201d2c10030b09101c050f1a15154a5558472d332f13231b11242f2d
090c3242512c11210a02050926453c31120b30141a0937250f21221a2209
0c0b48000000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 860 26 <0002001affeb01a601c4000d0057008fb800582fb800592fb8005810b800
29d0b800292fb80011dcb8005910b80047dcb8002fdc00b800004558b800
342f1bb90034000a3e59b800004558b800242f1bb9002400043e59bb004d
0001000b00042bbb00030001005500042bba000000240034111239ba0008
00240034111239b8002410b900160002f4ba002c00240034111239b80034
10b900420002f43031371e01333a013e01372e01232206070e0115141e02
33323e023736333215140e0223222e02353436372e0135343e0233321e02
151406232226272e0123220e02151416173e0133321615140e02232226aa
0f190e0d100b09060c101505233331291c2a33172d38231004060509152c
4731243a2a16302c0d1c253c4f2a1a2e2314100905060520320d21433621
14171a2d13262011181b0a0e2ff00401020303030302131a431a1b211407
0d13140709090521241c13222d1a254a1909231c1c3327170c1213070910
040317080d19251711200b0b070b0e0b0c050103>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 1240 50 <00010057000000b80061000b0022bb00000003000600042b00b800004558
b800032f1bb9000300043e59b80009dc3031371406232226353436333216
b81b16121e1b16121e30121e1b16121e1b000000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 1320 69 <00010031000003fa02ab006e00de00b800004558b800592f1bb90059000c
3e59b800004558b800622f1bb90062000c3e59b800004558b8000e2f1bb9
000e00043e59b800004558b800112f1bb9001100043e59b800004558b800
152f1bb9001500043e59b800004558b800262f1bb9002600043e59b80000
4558b800382f1bb9003800043e59b800004558b8003b2f1bb9003b00043e
59b800004558b800412f1bb9004100043e59b8000e10b900080002f4b800
1bd0ba0022000e0059111239ba002b000e0059111239b80032d0b80047d0
b8005910b900530002f4ba005e000e0059111239b80069d0303125061415
141e023332161514062322262b01220623222635343633323e0237132301
0e01232226270323030e011514161732161514062322262b012206220623
2226353436333e0137133e0135342e022322263534363b0132161713013e
013b01321615140623220e0207030302020b19170b0d0d060d1d0d760d1c
0d050a0f0e1a1e0f07039101fe6e04090807040253018a03012819030b0d
050b170b3008181b1907030a0d02322b09800301020b19170b0d0e0e7c14
08024b016d080a13780e0c0e0e1b1d1007033f0609010406050302080e05
020203080e04040b110d0243fd84070a0912026dfdd90b06081b0f010307
0e0502010103080d0502232401fe0b0a020407050302080e050511fdc402
410c0502080e05040a110d000000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 1844 89 <00020028fff601e501b9003f005b00b0b8005c2fb8005d2fb80013dcb900
2c0003f4b8005c10b80036d0b800362fb8001310b80040d0b800402fb800
1310b80043d0b800432fb8003610b900500003f4b8002c10b8005bd0b800
5b2f00b800004558b8003b2f1bb9003b00083e59b800004558b800272f1b
b9002700043e59b800004558b800312f1bb9003100043e59b8003b10b900
050001f4b8002710b900160001f4ba002c0027003b111239b8000510b800
48d0b8001610b80053d03031013e0333321615140e02070e01070e011514
1633323e02373e01333215140e02070623222e02270e0323222e0235343e
0233321e02073e0135342e02232206070e0315141633323e02373e013701
6d010409100c0b0f040a120e060905070509160f17120d060304070a0508
0b061b2d0b1b1a13040b1b2126151a2d23142a43542a131e160f0b010306
111f191d411a07120f0a211f12211e18080b040401770410100b0e0b0213
2a49381623131d1b110f1f16222c160b090902151e210d3607121d160c1b
170e15293a25376a53320d141746020d01031d201a353510363c3a152d33
0e16180b0e0b0d00>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 2272 90 <0002002dfff6019302b60020005c00b1b8005d2fb8005e2fb8002bdcb900
0a0003f4b8005d10b80035d0b800352fb9001c0003f4ba00210035002b11
1239b8003510b80038d0b800382fb8001c10b80048d0b800482f00b80000
4558b800512f1bb90051000c3e59b800004558b800562f1bb90056000c3e
59b800004558b800262f1bb9002600083e59b800004558b800302f1bb900
3000043e59b900000001f4b8002610b9000d0001f4ba0021003000561112
39b8005110b900480002f4303137323e02373e0335342623220e02070e03
070e0315141e02133e0333321e0215140e0223222e02353436373e053f01
3e0135342e02232226353436373e01373e0331321615140607a811221f1a
0909130f0a1f211a2e2315010206080601070805010c13180207181f2414
1c2f21132943552b182d21140104010a0e10100b0318030902091513080c
0d120e170d0712110d020a02010a111c2514133a3e381227391c231f0305
1a1c1a051a241a160c1d27180a01700716140e172a3a22366a533314273a
260a1a13042938423d2f0a600e23050407050302080e0502010201010102
0102080408030000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 2700 91 <00010028fff601a201b9003c007bb8003d2fb8003e2fb80031dcb9003700
03f4ba000000310037111239b8003d10b80029d0b800292fb9000f0003f4
b8003110b8001fd0b8001f2f00b800004558b8002e2f1bb9002e00083e59
b800004558b800242f1bb9002400043e59ba0000003400032bb8002e10b9
00050001f4b8002410b900140001f43031012e0323220e02070e0315141e
0233323e02373e0133321615140e0223222e0235343e0233321615140623
2226353436373e01018708191b1705182b251d0a0e130e060915231a0e2f
37391807040203071f3a5233263b27142d4a5e31343f21120e140c050b11
017810120902121d24121a3b372f0d13272014071627200703060505262a
221b2e3c213567503131241e1e110f0c140409030000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 2992 92 <00020028fff601fa02b6001b006900eab8006a2fb8006b2fb8001fdcb800
00d0b800002fb8001f10b80003d0b800032fb8006a10b80042d0b800422f
b900100003f4b8001f10b900380003f4b8001bd0b8001b2fb8001f10b800
1cd0b8001c2fb8001f10b80058d0b800582f00b800004558b8005e2f1bb9
005e000c3e59b800004558b800632f1bb90063000c3e59b800004558b800
472f1bb9004700083e59b800004558b800332f1bb9003300043e59b80000
4558b8003d2f1bb9003d00043e59b8004710b900080001f4b8003d10b900
130001f4b80022d0ba003800330063111239ba004c00330063111239b800
5e10b900550002f43031013e0135342e02232206070e0315141633323e02
373e0137170e0115141633323e02373e01333215140e02070623222e0227
0e0323222e0235343e0233321e0217373e0135342e02232226353436373e
0137323e0231321615140607015e010306111f191d411a07120f0a211f12
211e18080b04043d050209160f17120d060304070a05080b061b2d0b1b1a
13040b1b2126151a2d23142a43542a131e160f043d0102020915120b0b0d
130e170d02111410020a0201013b020d01031d201a353510363c3a152d33
0e16180b0e0b0d0a151d030f1f16222c160b090902151e210d3607121d16
0c1b170e15293a25376a53320d14170af3020a050407050302080e050201
02010202010208040803>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 3512 93 <0002002dfff601a201b9000f003d005fbb00130003002b00042bba003300
0700032bba000f002b003311123900b800004558b800302f1bb900300008
3e59b800004558b800262f1bb9002600043e59bb000f0001001000042bb8
003010b9000a0001f4b8002610b900160001f4303137323e043534262322
0e020f010e0115141633323e02373e0133321615140e0223222e0235343e
0233321615140e02070e0323ad0a272c2f261829210c2c323010050b042c
2b0e2f37391807040203071f3a523322382716324d5a2732360510221c12
2a27220afc01060c18241a1d230a22433a14302c0b383f07162720070306
0505262a221a2f4227436645233321071a1f1e0b07080401>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 3776 106 <0001001bfff601aa01b90053008fb800542fb800552fb8004bdcb9005100
03f4ba0000004b0051111239b80003d0b800032fb8005410b8002cd0b800
2c2fb900450003f4b8000bd0b8000b2fb8005110b80048d0b800482f00b8
00004558b800422f1bb9004200083e59b800004558b800482f1bb9004800
083e59ba0000004e00032bb8004810b900030001f4b8002fd0ba0045004e
00001112393031012e01232206070e03070e01070e01070e03070e012322
2635343e02373e03373e01373e0135342623220e02070e0123222635343e
02373e01333216173e0133321615140623222635343601850a170c1f2709
09130f0b01020603040804020e100d010517080b0f040506030205060502
070e07050c0d120f17110d06050406050605090c0609211d1e340520421e
262b1e150b1618019907051a0808191814030a160b111f1109383f33030f
0c0e0b021118190a07161816071b361b173411161814212b161107060302
161e210e112327282e212418171f0e12111c0000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
1 0 8 <0001001b000002a702ab008500abbb00610003004200042b00b800004558
b800732f1bb90073000c3e59b800004558b800762f1bb90076000c3e59b8
00004558b8007a2f1bb9007a000c3e59b800004558b8002c2f1bb9002c00
043e59b800004558b8002f2f1bb9002f00043e59b800004558b800332f1b
b9003300043e59bb000c0001001200042bba0000002c0073111239b8002c
10b900260002f4b80039d0b8000c10b80055d0b8007310b9006d0002f4b8
0080d03031253e03373e01373e013b013216151406070e03070e03070e03
15141e023332161514062322262b01220623222635343633323e023f012e
0135343e02373e0135342e022722263534363b01321e02151406070e0115
141617133e0135342e022322263534363332163b01323633321615140623
220e02070124374a301907081a11172411190e0c0806171f150e050f2f45
5d3d070803010310201e110b0e061123118a112211050b0e142126130805
0c5052040405010405080b0c05020a0d0d180a18150f06050a052f337203
01020f201e100d0d071122118b112211030c0e1421251308039b0d414d4d
1a203a1418080208060301031e272c11345c482f061d210f040106080503
03080e04020202080e05040c1612300b5b50101f1a140411201014160c03
0103070802020f201d13221628350b3b490c01c50c0b010608060302080e
05020202080e05040b130e000000>XKLAAA+Ribbit's#20CMMI12 AddT42Char 
XKLAAA+Ribbit's#20CMMI12 /CharStrings get begin
/.notdef 0 def
/exclam 25 def
/quotedbl 26 def
/colon 50 def
/M 69 def
/a 89 def
/b 90 def
/c 91 def
/d 92 def
/e 93 def
/r 106 def
/ordfeminine 8 def
end
XKLAAA+Ribbit's#20CMMI12 /Encoding get
dup 32 /.notdef put
dup 33 /exclam put
dup 34 /quotedbl put
dup 58 /colon put
dup 77 /M put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 114 /r put
dup 170 /ordfeminine put
pop
end
%ADOEndSubsetFont
[/N7/XKLAAA+Ribbit's#20CMMI12 1 TZG
%ADOBeginSubsetFont: WKFBAA+Ribbit's#20CMR12 Initial
ct_T42Dict begin
-0.031 -0.25 0.984 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /WKFBAA+Ribbit's#20CMR12
Type42DictBegin
[<00010000000c000c000c000c4f532f326e944375000000cc000000606376
742000c8068f0000012c0000001e6670676d06599c370000014c00000173
676c79666d42ffcb0000094c00000c7868656164e6405159000002c00000
00366868656106ab0386000002f800000024686d7478163601e20000031c
000001e26c6f6361eb74ee70000005000000010c6d617870029201d30000
060c000000206e616d650a8d09710000062c000002a97072657019d62590
000008d80000007267646972000000000000000000000000000201b101f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
070000020004000000a30000004000000000000000003141534300400021
007202bcff38004302ee00fb000000010000000001f402bc000000200003
0014001d00140041005100000015ff3e000b01af000f0299000a02ab0015
0000b800002c4bb800095058b101018e59b801ff85b800441db900090003
5f5e2db800012c2020456944b001602db800022cb800012a212db800032c
2046b003254652582359208a208a49648a204620686164b0042546206861
64525823658a592f20b00053586920b000545821b040591b6920b0005458
21b0406559593a2db800042c2046b00425465258238a592046206a6164b0
042546206a61645258238a592ffd2db800052c4b20b0032650585158b080
441bb04044591b21212045b0c05058b0c0441b2159592db800062c202045
6944b001602020457d691844b001602db800072cb800062a2db800082c4b
20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a2359
20b0032653582321b800c08a8a1b8a235920b0032653582321b801008a8a
1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b003
2545b8018050582321b8018023211bb003254523212321591b2159442db8
00092c4b535845441b2121592d0000010000000100002b78cfb95f0f3cf5
000903e800000000c1b4874000000000c1b48740ffdeff0503dc02ee0000
000900020000000000000001000002eeff56000003eeffdeffd503dc0001
0000000000000000000000000000006c0146000000000000014600000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000001100055
01ea00210000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
01ea005b01ea003101ea002901ea001b01ea003100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000381002c00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000022000230000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000017d001c000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000004a00d800d800d800d800d800d800d800d8
00d800d800d800d800d800d800d8014001d402a2031e03e803e803e803e8
03e803e803e803e803e803e803e803e803e803e803e803e803e803e803e8
03e803e803e803e803e804de04de04de04de04de04de04de04de04de04de
04de04de04de04de04de04de04de04de04de04de04de04de04de05940594
059405940594059405940594059405940594059405940594063c063c063c
063c063c063c063c063c063c063c063c063c063c063c063c063c063c063c
063c063c063c063c063c063c063c063c063c000100000085005f00020000
0000000100000000000a000002000173000000000000001000c600010000
00000000004500000001000000000001000f004500010000000000020006
00540001000000000003000e005a0001000000000004000e006800010000
00000005000b00760001000000000006000e006800010000000000080020
00810003000104090000008a00a10003000104090001001e012b00030001
04090002000c01490003000104090003001c01550003000104090004001c
017100030001040900050016018d0003000104090006001c017100030001
04090008004001a3436f7079726967687420284329203139393720416d65
726963616e204d617468656d61746963616c20536f63696574792e20416c
6c20526967687473205265736572766564436f6d7075746572204d6f6465
726e4d656469756d5269626269743b434d5231323b315269626269742773
20434d52313256657273696f6e20312e30432920416d65726963616e204d
617468656d61746963616c20536f63696574790043006f00700079007200
690067006800740020002800430029002000310039003900370020004100
6d00650072006900630061006e0020004d0061007400680065006d006100
74006900630061006c00200053006f00630069006500740079002e002000
41006c006c00200052006900670068007400730020005200650073006500
720076006500640043006f006d007000750074006500720020004d006f00
6400650072006e004d0065006400690075006d0052006900620062006900
74003b0043004d005200310032003b003100520069006200620069007400
27007300200043004d00520031003200560065007200730069006f006e00
200031002e00300043002900200041006d00650072006900630061006e00
20004d0061007400680065006d00610074006900630061006c0020005300
6f00630069006500740079000000b800002b00ba0001000200022b01ba00
03000200022b01bf000300550046003100230016000000082bbf00040044
0038003100230016000000082b00bf000100be009c007900570041000000
082bbf0002011300e100af007d0041000000082b00ba0005000500072bb8
000020457d691844000000>
[3193 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 0 <> WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 0 25 <00020055000000b802cb000b00190040bb00000004000600042bb8000610
b80013d0b8000010b80019d000b800004558b800032f1bb9000300053e59
bb00120002000f00042bb8000310b80009dc303137140623222635343633
3216270e012322262703263633321615b81c15141c1c15141c2401040807
040124022310102031141d1c14141d1c840e07080d01ca1f19171800>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 148 26 <000200210194014e02b6001d003b0077b8003c2fb8003d2fb8000cdcb800
1bdcb80000d0b800002fb8003c10b80039d0b800392fb8001ed0b8001e2f
b8003910b8002adc00b800004558b800092f1bb90009000d3e59b8000045
58b800272f1bb90027000d3e59bb00160002001100042bb8000910b80003
dcb80021d0b8001110b8002fd0303101140623222635343633321615140e
022322353436373e0335342627140623222635343633321615140e022322
353436373e0335342601381414171a1a161e21191f1d030a02071a1c0d02
01bf1414171a1a161e21191f1d030a02071a1c0d0201026901131d14141c
372f2b45311b0a0205071a362e21050a0a0501131d14141c372f2b45311b
0a0205071a362e21050a0a000000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 432 41 <0001005b0000019a029900250066bb00000003001800042b00b800004558
b800072f1bb9000700053e59b800004558b8000c2f1bb9000c00053e59b8
00004558b800112f1bb9001100053e59bb001d0001001c00042bb8000710
b900050001f4b80012d0b80013d0ba0019001c001d111239303125141e02
3b01152e012a01232a0206073533323e0235110e012335323e0237321615
0120041125211f0a2a2f2d0c0c2d302a0a1f212511042a4511273a2a1d09
0f054d0e120b051d010101011d050b120e020914061d0c13170a0711>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 640 42 <00010031000001b80299003b0081b8003c2fb8003d2fb8003c10b8001bd0
b8001b2fb80001d0b8003d10b80025dcb900060004f4b8001b10b9001300
04f4ba002f001b0013111239b8002510b8003bd000b800004558b800202f
1bb90020000b3e59b800004558b800002f1bb9000000053e59ba00100016
00032bb8002010b9000b0001f4b8000010b8002fdc3031290135373e0135
342e02232206073633321615140623222e0235343e0233321e0215140e02
070e0307333a013e01373e033733019efe93ca2b3f13233320314b0e030b
151a1f10010f110e192f442c2b4c382016324f390a1e211f0ab90b1e1d15
0304060604011618e2306f40223c2c193f33011a15181702091513204235
221c32472b253d404d34091e211e0902040306181b1906000000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 936 43 <00010029ffeb01c00299005e00a5b8005f2fb800602fb8005f10b80021d0
b800212fb900190004f4b8006010b80035dcba003000210035111239ba00
4800210019111239b900520004f4b8001910b8005bd0b8005b2f00b80000
4558b800262f1bb90026000b3e59b800004558b8003a2f1bb9003a00053e
59ba0042004800032bba0016001c00032bbb00000002005700042bb80026
10b9000f0002f4ba003000570000111239b8003a10b9004d0001f4303113
323e02373e0335342e0223220e02073633321615140623222e0235343e02
33321e0215140e02071e0315140e0223222e02353436333216151406271e
0333323e0235342e022b01222635343637d60a1717180b0b0d0602151f22
0c02202c2d0e0308111d1d10060f0f0a1a2f3f262441311d14263421243e
2e1a1f384b2d2a49361f2012151c25180b272d2e12122a22170f1e2e202e
0e09080d016a030a12111024201b07252c1808020d1c190116181716040a
130f1b3125151524321e1d382e240906212f3d22264535201a2c3b211d17
1b161b1a04192215090f264031243d2c190208070301>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 1348 44 <0002001b000001ce02a3000200290080bb00030003000100042bb8000310
b80006d0b8000110b8001fd0b8001f2f00b800004558b8000e2f1bb9000e
00053e59b800004558b800132f1bb9001300053e59b800004558b800182f
1bb9001800053e59bb00040001000500042bb8000410b80000d0b8000e10
b9000c0001f4b80019d0b8001ad0b8000510b80020d03031373311133315
2315141e023b01152e012a01232a0206073533323e023d012135013e0133
32161534f3426565030f1e1b14092327260a0b24272309141b1f0e03fef9
012d0607060b03c40179fe871d5b0e120b041d010101011d040b120e5b1d
01d309030a0e0000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 1596 45 <00010031ffeb01b80298005400acba0000003900032bbb00080004002800
042b00b800004558b8003d2f1bb9003d000b3e59b800004558b800402f1b
b90040000b3e59b800004558b800462f1bb90046000b3e59b800004558b8
00492f1bb90049000b3e59b800004558b8000d2f1bb9000d00053e59ba00
43005100032bba0015001d00032bbb00030002003000042bba0000000d00
3d111239ba001f001d0015111239b8000d10b900220001f4ba0054005100
431112393031133e0133321e0215140e0223222e0235343633321615140e
022322271e01333236373e01353426272e03232206070e01232226351134
36333216171e01333236373e0133321615140e02232226278014402b2744
321c223b4d2a2a422e191e0e1319090d100609070e55322137111507050d
030d151e14264215080404090302060104050e443214442a07040205031a
30452a083120016e1520233b4f2d30513b22213441201d1317150d110a04
03373f221b224d1d1d441d06171510221f09040a0e01290c0a0102061609
12030106030520221a040b000000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 2000 69 <0001002c0000035402ab00530110ba0031004700032bbb000d0004002500
042bba00000047000d111239ba00270047000d11123900b800004558b800
042f1bb90004000d3e59b800004558b8004f2f1bb9004f000d3e59b80000
4558b800142f1bb9001400053e59b800004558b800192f1bb9001900053e
59b800004558b8001e2f1bb9001e00053e59b800004558b8002b2f1bb900
2b00053e59b800004558b800372f1bb9003700053e59b800004558b8003c
2f1bb9003c00053e59b800004558b800412f1bb9004100053e59ba000000
140004111239b8000410b900060001f4b8001410b900120001f4b8001fd0
b80020d0ba002700140004111239ba003000140004111239b80036d0b800
42d0b8000610b8004dd0b8004ed0303125133e013b011523220e02151114
1e023b01152e012a01232a0206073533323e02351123030e012322262703
2311141e0233152e012a01232a02060735323e023511342e022b01353332
161701c0da0608119b141b1e0f03030f1e1b14092328250b0b2528230914
1b1e0f0301f3050507080603f101031226240a1c1e1d0a0b1c1e1c0a2426
1203030f1e1b149b1109055e02390e061d040b120efded0e120b041d0101
01011d040b120e0242fd860b090b080276fdde0a1a16101d010101011d10
161a0a01f80e120b041d050e>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 2492 92 <00020023fff6020302b6001b003e00bbb8003f2fb800402fb8001ddcb900
370003f4b80000d0b800002fb8003f10b8002fd0b8002f2fb9000e0004f4
b8003710b80024d0b800242fba0025002f001d11123900b800004558b800
1c2f1bb9001c000d3e59b800004558b800342f1bb9003400093e59b80000
4558b800242f1bb9002400053e59b800004558b8002a2f1bb9002a00053e
59b8003410b900080002f4b8002a10b900130002f4ba00250024001c1112
39ba00370024001c111239b8001c10b9003d0001f43031013426272e0323
2206070e0115141e02333236373e0234351311141e02331507350e032322
2e0235343e023332161735342e0223350176030904111a251726390f1111
232d2c0a263b1205060341050f1e1a8d0516212e1c294b3821233b4e2c2e
3f10050f1f1901430e0a0d0615130f271719423649522809261a080b0809
070241fd9f12160c041d0a4507171710233c523030533c232a16dd12160c
041d0000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
1 2856 106 <0001001c0000016101b9003900b6b8003a2fb8003b2fb8003a10b80017d0
b800172fb900000003f4b8001fd0b8001f2fb8000010b80021d0b800212f
b8003b10b80029dcb9002f0004f400b800004558b8001f2f1bb9001f0009
3e59b800004558b800262f1bb9002600093e59b800004558b800072f1bb9
000700053e59b800004558b8000c2f1bb9000c00053e59b800004558b800
112f1bb9001100053e59b8000710b900050001f4b80012d0ba0021000700
1f111239b8002610b900340002f4303137141e023b01152e012a01232a02
060735323e023511342e0223353715333e03333216151406232226353436
372623220e0215a7030e1f1b14092024220a0b1f1f1e0a181e1105050f1f
198601020e1c2c202026190f0c1b1206040a1d2c1d0f4c0e120a051d0101
01011d01091211010f12160c041d0b6f0725261d231714141216140e0301
1f3544240000>WKFBAA+Ribbit's#20CMR12 AddT42Char 
WKFBAA+Ribbit's#20CMR12 /CharStrings get begin
/.notdef 0 def
/exclam 25 def
/quotedbl 26 def
/one 41 def
/two 42 def
/three 43 def
/four 44 def
/five 45 def
/M 69 def
/d 92 def
/r 106 def
end
WKFBAA+Ribbit's#20CMR12 /Encoding get
dup 32 /.notdef put
dup 33 /exclam put
dup 34 /quotedbl put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 77 /M put
dup 100 /d put
dup 114 /r put
pop
end
%ADOEndSubsetFont
[/N12/WKFBAA+Ribbit's#20CMR12 1 TZG
q
0.0 0.0 m
119.4 0.0 l
119.4 132.6 l
0.0 132.6 l
h
W
n
n
51.182 123.55 m
51.182 128.27 55.009 132.1 59.729 132.1 c
64.449 132.1 68.275 128.27 68.275 123.55 c
68.275 123.55 68.275 123.55 68.275 123.55 c
68.275 118.83 64.449 115.01 59.729 115.01 c
55.009 115.01 51.182 118.83 51.182 123.55 c
h
[/DeviceGray] cs 1.0 sc
eofill
0.5 w
1 J
1 j
n
51.182 123.55 m
51.182 128.27 55.009 132.1 59.729 132.1 c
64.449 132.1 68.275 128.27 68.275 123.55 c
68.275 123.55 68.275 123.55 68.275 123.55 c
68.275 118.83 64.449 115.01 59.729 115.01 c
55.009 115.01 51.182 118.83 51.182 123.55 c
h
0.0 sc
S
n
8.0349 72.346 m
8.0349 77.066 11.861 80.893 16.581 80.893 c
21.302 80.893 25.128 77.067 25.128 72.346 c
25.128 72.346 25.128 72.346 25.128 72.346 c
25.128 67.626 21.302 63.8 16.581 63.8 c
11.861 63.8 8.035 67.626 8.0349 72.346 c
h
1.0 sc
eofill
n
8.0349 72.346 m
8.0349 77.066 11.861 80.893 16.581 80.893 c
21.302 80.893 25.128 77.067 25.128 72.346 c
25.128 72.346 25.128 72.346 25.128 72.346 c
25.128 67.626 21.302 63.8 16.581 63.8 c
11.861 63.8 8.035 67.626 8.0349 72.346 c
h
0.0 sc
S
n
93.684 72.493 m
93.684 77.213 97.51 81.039 102.23 81.039 c
106.95 81.039 110.78 77.213 110.78 72.493 c
110.78 72.493 110.78 72.493 110.78 72.493 c
110.78 67.773 106.95 63.946 102.23 63.946 c
97.51 63.946 93.684 67.773 93.684 72.493 c
h
1.0 sc
eofill
n
93.684 72.493 m
93.684 77.213 97.51 81.039 102.23 81.039 c
106.95 81.039 110.78 77.213 110.78 72.493 c
110.78 72.493 110.78 72.493 110.78 72.493 c
110.78 67.773 106.95 63.946 102.23 63.946 c
97.51 63.946 93.684 67.773 93.684 72.493 c
h
0.0 sc
S
n
7.7782 8.9598 m
7.7782 13.68 11.605 17.506 16.325 17.506 c
21.045 17.506 24.871 13.68 24.871 8.9598 c
24.871 8.9598 24.871 8.9598 24.871 8.9598 c
24.871 4.2397 21.045 0.4133 16.325 0.4133 c
11.605 0.4133 7.7782 4.2397 7.7782 8.9598 c
h
1.0 sc
eofill
n
7.7782 8.9598 m
7.7782 13.68 11.605 17.506 16.325 17.506 c
21.045 17.506 24.871 13.68 24.871 8.9598 c
24.871 8.9598 24.871 8.9598 24.871 8.9598 c
24.871 4.2397 21.045 0.4133 16.325 0.4133 c
11.605 0.4133 7.7782 4.2397 7.7782 8.9598 c
h
0.0 sc
S
n
93.495 8.9598 m
93.495 13.68 97.321 17.506 102.04 17.506 c
106.76 17.506 110.59 13.68 110.59 8.9598 c
110.59 8.9598 110.59 8.9598 110.59 8.9598 c
110.59 4.2397 106.76 0.4133 102.04 0.4133 c
97.321 0.4133 93.495 4.2397 93.495 8.9598 c
h
1.0 sc
eofill
n
93.495 8.9598 m
93.495 13.68 97.321 17.506 102.04 17.506 c
106.76 17.506 110.59 13.68 110.59 8.9598 c
110.59 8.9598 110.59 8.9598 110.59 8.9598 c
110.59 4.2397 106.76 0.4133 102.04 0.4133 c
97.321 0.4133 93.495 4.2397 93.495 8.9598 c
h
0.0 sc
S
q
0.076772 -0.000000019 -0.000000005 0.13504 55.602 118.41 cm
q
0.27224 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 264.48 464.89 re
W
n
q
n
0.0 0.10651 264.72 464.78 re
eoclip
n
0.0 139.06 m
/N7 571.07 Tf
(c) show
Q
Q
Q
q
0.073622 -0.000000009 0.0 0.17677 13.989 64.916 cm
q
0.37139 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 193.86 464.89 re
W
n
q
n
0.0 0.10651 193.91 464.78 re
eoclip
n
0.0 106.26 m
/N7 436.18 Tf
(b) show
Q
Q
Q
q
0.079527 -0.000000009 -0.000000009 0.17244 81.68 95.969 cm
q
0.33544 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 214.64 464.89 re
W
n
q
n
0.0 0.10651 214.65 464.78 re
eoclip
n
-3.7697 108.82 m
/N12 446.74 Tf
(2) show
Q
Q
Q
q
0.088976 -0.000000009 -0.000000009 0.13504 98.972 66.418 cm
q
0.23494 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 306.46 464.89 re
W
n
q
n
0.0 0.10651 306.69 464.78 re
eoclip
n
0.0 139.06 m
/N7 571.07 Tf
(a) show
Q
Q
Q
q
0.091732 0.0 -0.000000001 0.17677 13.181 3.0921 cm
q
0.29819 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 241.46 464.89 re
W
n
q
n
0.0 0.10651 241.21 464.78 re
eoclip
n
q
Q
0.0 106.26 m
/N7 436.18 Tf
(d) show
Q
Q
Q
q
0.076771 0.0 -0.000000009 0.13504 99.354 4.0558 cm
q
0.27224 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 264.48 464.89 re
W
n
q
n
0.0 0.10651 264.72 464.78 re
eoclip
n
q
Q
0.0 139.06 m
/N7 571.07 Tf
(e) show
Q
Q
Q
q
0.079527 -0.000000009 -0.000000005 0.17244 56.735 70.302 cm
q
0.33544 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 214.64 464.89 re
W
n
q
n
0.0 0.10651 214.65 464.78 re
eoclip
n
-3.7697 108.82 m
/N12 446.74 Tf
(2) show
Q
Q
Q
q
0.082283 0.0 -0.000000009 0.17244 57.302 8.2511 cm
q
0.32427 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 222.04 464.89 re
W
n
q
n
0.0 0.10651 222.29 464.78 re
eoclip
n
q
Q
0.0 108.82 m
/N12 446.74 Tf
(3) show
Q
Q
Q
q
0.082283 -0.000000005 -0.000000001 0.17244 9.3248 35.024 cm
q
0.32427 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 222.04 464.89 re
W
n
q
n
0.0 0.10651 222.29 464.78 re
eoclip
n
q
Q
0.0 108.82 m
/N12 446.74 Tf
(3) show
Q
Q
Q
q
0.21142 -0.000000005 -0.000000005 0.17244 54.822 39.843 cm
q
0.15488 0.0 0.0 0.18985 0.0 0.0 cm
0.0 0.0 464.88 379.25 re
W
n
q
n
0.0 -0.28842 464.84 379.54 re
eoclip
n
q
Q
9.172 88.481 m
/N12 364.79 Tf
(4) show
Q
q
n
0.0 -0.28842 464.84 379.54 re
eoclip
n
q
Q
189.61 88.481 m
/N7 364.79 Tf
(:) show
Q
q
n
0.0 -0.28842 464.84 379.54 re
eoclip
n
q
Q
287.48 88.481 m
/N12 364.79 Tf
(5) show
Q
Q
Q
q
0.082283 -0.000000005 -0.000000009 0.17244 95.753 34.674 cm
q
0.32427 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 222.04 464.89 re
W
n
q
n
0.0 0.10651 222.29 464.78 re
eoclip
n
q
Q
0.0 108.82 m
/N12 446.74 Tf
(3) show
Q
Q
Q
q
0.066929 -0.000000009 -0.000000005 0.17244 28.956 93.645 cm
q
0.39843 0.0 0.0 0.15488 0.0 0.0 cm
0.0 0.0 180.71 464.89 re
W
n
q
n
0.0 0.10651 180.61 464.78 re
eoclip
n
-22.57 108.82 m
/N12 446.74 Tf
(1) show
Q
Q
Q
n
59.729 114.93 m
16.581 80.819 l
S
n
102.05 81.039 m
59.546 115.01 l
S
n
93.684 72.493 m
25.128 72.346 l
S
n
16.325 17.506 m
16.581 63.8 l
S
n
102.04 17.506 m
102.23 63.946 l
S
n
93.554 8.4594 m
24.871 8.9598 l
S
n
96.167 15.667 m
22.629 66.308 l
S
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
